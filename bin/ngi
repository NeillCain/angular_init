#!/usr/bin/env ruby

# angular_init (short-name: ngi)
# Copyright 2015 Joshua Beam
# github.com/joshbeam/angular_init
# MIT License

#   STRUCTURE

# 	module AngularInit
# 		class Manager
#			class Generator
#           	# create the template
#			end
#
# 			def run
#				# decides whether to configure, generate, etc.
#			end
#
# 			class Configure
#
# 			end
# 		end
# 	end

require File.dirname(__FILE__)+'/../src/ruby/angular_init/angular_init'

ARGS_SIZE = ARGV.size
CONFIG = AngularInit::Manager::Configure.get()
COMMANDS = CONFIG['global']['commands'].collect{ |k,v| v }

# (2) expect something like => ngi make <type> (e.g. controller, directive, etc.)
# (1) or expect something like => ngi config

# case (2)
if ARGS_SIZE > 0
	command = ARGV[0] # e.g. "make"

	def valid_command?
		COMMANDS.include?(ARGV[0])
	end

	raise 'Invalid command! Choose from: '+COMMANDS.to_s unless valid_command?

	new_args = {
		:command => command,
		:config => CONFIG
	}

	new_args[:type] = ARGV[1] if ARGS_SIZE == 2 # e.g. controller, directive, etc.

	# manager will decide whether to run ::Generator, ::Configure, etc.
	AngularInit::Manager.run(new_args)

end